#######################################
# Training and Testing Data layers
#######################################

name: "TextRecognition"
layer {
  name: "ocr"
  type: "HDF5Data"
  top: "data"
  top: "label"
  hdf5_data_param {
    source: "/extra/pva/hdf5_data_05_chars/train_list.txt"
    batch_size: 200
  }
  include: { phase: TRAIN }
}

layer {
  name: "ocr"
  type: "HDF5Data"
  top: "data"
  top: "label"
  hdf5_data_param {
    source: "/extra/pva/hdf5_data_05_chars/test_list.txt"
    batch_size: 200
  }
  include: { phase: TEST }
}

#######################################
# Convolution and Pooling layers
#######################################

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 64
    kernel_h: 5
    kernel_w: 25
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "maxpool1"
  type: "Pooling"
  bottom: "conv1"
  top: "maxpool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "maxpool1"
  top: "conv2"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 128
    kernel_h: 5
    kernel_w: 20
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "maxpool2"
  type: "Pooling"
  bottom: "conv2"
  top: "maxpool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "maxpool2"
  top: "conv3"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 256
    kernel_h: 5
    kernel_w: 20
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "maxpool3"
  type: "Pooling"
  bottom: "conv3"
  top: "maxpool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "maxpool3"
  top: "conv4"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 256
    kernel_h: 3
    kernel_w: 15
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 256
    kernel_h: 3
    kernel_w: 9
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

#######################################
# Innerproduct feature layers
#######################################

layer {
  name: "innerproduct1"
  type: "InnerProduct"
  bottom: "conv5"
  top: "innerproduct1"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct2"
  type: "InnerProduct"
  bottom: "innerproduct1"
  top: "innerproduct2"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#######################################
# Slicing layer
#######################################

layer {
  name: "slicer_label"
  type: "Slice"
  bottom: "label"
  top: "label1"
  top: "label2"
  top: "label3"
  top: "label4"
  top: "label5"
  slice_param {
    axis: 1
  }
}

#######################################
# Innerproduct result layers
#######################################

layer {
  name: "innerproduct23_1"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_1"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct23_2"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_2"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0}
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct23_3"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_3"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0}
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct23_4"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_4"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0}
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct23_5"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_5"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0}
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#######################################
# Accuracy layers
#######################################

layer {  name: "accuracy1"
  type: "Accuracy"
  bottom: "innerproduct23_1"
  bottom: "label1"
  top: "accuracy1"
  include: { phase: TEST }
}
layer {  name: "accuracy2"
  type: "Accuracy"
  bottom: "innerproduct23_2"
  bottom: "label2"
  top: "accuracy2"
  include: { phase: TEST }
}
layer {  name: "accuracy3"
  type: "Accuracy"
  bottom: "innerproduct23_3"
  bottom: "label3"
  top: "accuracy3"
  include: { phase: TEST }
}
layer {  name: "accuracy4"
  type: "Accuracy"
  bottom: "innerproduct23_4"
  bottom: "label4"
  top: "accuracy4"
  include: { phase: TEST }
}
layer {  name: "accuracy5"
  type: "Accuracy"
  bottom: "innerproduct23_5"
  bottom: "label5"
  top: "accuracy5"
  include: { phase: TEST }
}

#######################################
# Loss Layers
#######################################

layer {  name: "loss1"
  type: "SoftmaxWithLoss"
  bottom: "innerproduct23_1"
  bottom: "label1"
  top: "loss1"

}
layer {  name: "loss2"
  type: "SoftmaxWithLoss"
  bottom: "innerproduct23_2"
  bottom: "label2"
  top: "loss2"

}
layer {  name: "loss3"
  type: "SoftmaxWithLoss"
  bottom: "innerproduct23_3"
  bottom: "label3"
  top: "loss3"

}
layer {  name: "loss4"
  type: "SoftmaxWithLoss"
  bottom: "innerproduct23_4"
  bottom: "label4"
  top: "loss4"

}
layer {  name: "loss5"
  type: "SoftmaxWithLoss"
  bottom: "innerproduct23_5"
  bottom: "label5"
  top: "loss5"
}
