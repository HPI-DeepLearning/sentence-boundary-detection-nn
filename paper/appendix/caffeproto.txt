#######################################
# Memory Data layer
#######################################

name: "TextRecognition"
layer {
  name: "ocr"
  type: "MemoryData"
  top: "data"
  top: "label"
  memory_data_param {
   batch_size: 1
   channels: 1
   height: 32
   width: 100
  }
}


#######################################
# Convolution and Pooling layers
#######################################

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 64
    kernel_h: 5
    kernel_w: 25
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "maxpool1"
  type: "Pooling"
  bottom: "conv1"
  top: "maxpool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "maxpool1"
  top: "conv2"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 128
    kernel_h: 5
    kernel_w: 20
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "maxpool2"
  type: "Pooling"
  bottom: "conv2"
  top: "maxpool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "maxpool2"
  top: "conv3"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 256
    kernel_h: 5
    kernel_w: 20
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "maxpool3"
  type: "Pooling"
  bottom: "conv3"
  top: "maxpool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "maxpool3"
  top: "conv4"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 256
    kernel_h: 3
    kernel_w: 15
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param { lr_mult: 1 }
  param { lr_mult: 2 }
  convolution_param {
    num_output: 256
    kernel_h: 3
    kernel_w: 9
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

#######################################
# Innerproduct feature layers
#######################################

layer {
  name: "innerproduct1"
  type: "InnerProduct"
  bottom: "conv5"
  top: "innerproduct1"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct2"
  type: "InnerProduct"
  bottom: "innerproduct1"
  top: "innerproduct2"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#######################################
# Innerproduct result layers
#######################################

layer {
  name: "innerproduct23_1"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_1"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct23_2"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_2"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0}
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct23_3"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_3"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0}
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct23_4"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_4"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0}
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "innerproduct23_5"
  type: "InnerProduct"
  bottom: "innerproduct2"
  top: "innerproduct23_5"
  param { lr_mult: 1 decay_mult: 1}
  param { lr_mult: 2 decay_mult: 0}
  inner_product_param {
    num_output: 37
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



#######################################
# Probability layers
#######################################

layer {
  name: "prop1"
  type: "Softmax"
  bottom: "innerproduct23_1"
  top: "prop1"
}

layer {
  name: "prop2"
  type: "Softmax"
  bottom: "innerproduct23_2"
  top: "prop2"
}

layer {
  name: "prop3"
  type: "Softmax"
  bottom: "innerproduct23_3"
  top: "prop3"
}

layer {
  name: "prop4"
  type: "Softmax"
  bottom: "innerproduct23_4"
  top: "prop4"
}

layer {
  name: "prop5"
  type: "Softmax"
  bottom: "innerproduct23_5"
  top: "prop5"
}

#######################################
# Argmax layers
#######################################

layer {
  name: "argmax1"
  type: "ArgMax"
  bottom: "prop1"
  top: "argmax1"
  argmax_param {
    top_k: 3
  }
}

layer {
  name: "argmax2"
  type: "ArgMax"
  bottom: "prop2"
  top: "argmax2"
  argmax_param {
    top_k: 3
  }
}

layer {
  name: "argmax3"
  type: "ArgMax"
  bottom: "prop3"
  top: "argmax3"
  argmax_param {
    top_k: 3
  }
}

layer {
  name: "argmax4"
  type: "ArgMax"
  bottom: "prop4"
  top: "argmax4"
  argmax_param {
    top_k: 3
  }
}

layer {
  name: "argmax5"
  type: "ArgMax"
  bottom: "prop5"
  top: "argmax5"
  argmax_param {
    top_k: 3
  }
}
